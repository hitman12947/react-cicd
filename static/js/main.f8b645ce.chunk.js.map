{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","email","setEmail","organization","setOrganization","handleInput","e","target","name","value","handleSubmit","a","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","className","htmlFor","type","onChange","id","aria-describedby","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAyEeA,G,MAtEH,WAAO,IAAD,EACYC,mBAAS,MADrB,mBACPC,EADO,KACAC,EADA,OAE0BF,mBAAS,MAFnC,mBAEPG,EAFO,KAEOC,EAFP,KAIRC,EAAc,SAACC,GACK,UAAlBA,EAAEC,OAAOC,KACTN,EAASI,EAAEC,OAAOE,OAElBL,EAAgBE,EAAEC,OAAOE,QAI3BC,EAAY,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,6DACjBL,EAAEM,iBADe,SAEEC,MAAM,0CAA2C,CAChEC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBjB,QACAE,mBAELgB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAXJ,OAEXC,EAFW,OAYjBC,QAAQC,IAAIF,GAZK,2CAAH,sDAclB,OACI,qBAAKG,UAAU,MAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,OAAd,2BACA,iCACI,sBAAKA,UAAU,aAAf,UACI,uBAAOC,QAAQ,qBAAf,2BAGA,uBACIlB,KAAK,QACLmB,KAAK,QACLC,SAAUvB,EACVoB,UAAU,eACVI,GAAG,qBACHC,mBAAiB,iBAGzB,sBAAKL,UAAU,aAAf,UACI,uBAAOC,QAAQ,wBAAf,0BAGA,uBACIlB,KAAK,eACLmB,KAAK,OACLF,UAAU,eACVI,GAAG,wBACHD,SAAUvB,OAIlB,wBACIsB,KAAK,SACLF,UAAU,kBACVM,QAASrB,EAHb,8BChDLsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f8b645ce.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n    const [email, setEmail] = useState(null);\n    const [organization, setOrganization] = useState(null);\n\n    const handleInput = (e) => {\n        if (e.target.name === \"email\") {\n            setEmail(e.target.value);\n        } else {\n            setOrganization(e.target.value);\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const data = await fetch(\"http://18.223.124.40:8000/api/send-mail\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                email,\n                organization,\n            }),\n        }).then((res) => res.json());\n        console.log(data);\n    };\n    return (\n        <div className=\"App\">\n            <div className=\"container w-50\">\n                <h2 className=\"my-4\">Enter Details</h2>\n                <form>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputEmail1\">\n                            Email address\n                        </label>\n                        <input\n                            name=\"email\"\n                            type=\"email\"\n                            onChange={handleInput}\n                            className=\"form-control\"\n                            id=\"exampleInputEmail1\"\n                            aria-describedby=\"emailHelp\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputPassword1\">\n                            Organization\n                        </label>\n                        <input\n                            name=\"organization\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"exampleInputPassword1\"\n                            onChange={handleInput}\n                        />\n                    </div>\n\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        onClick={handleSubmit}\n                    >\n                        Submit\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}